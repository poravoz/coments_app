# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  originalName: String!
  type: String!
  url: String!
}

input AttachmentToRemove {
  type: String!
  url: String!
}

type CommentEntity {
  attachments: [Attachment!]
  children: [CommentEntity!]
  comment: String
  createdAt: DateTime!
  id: ID!
  parent: CommentEntity
  parentId: String
  user: UserEntity!
}

input CreateCommentDto {
  comment: String
  parentId: String
}

input CreateReplyDto {
  comment: String
}

input CreateUserDto {
  avatarUrl: String
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createComment(createCommentInput: CreateCommentDto!, files: [Upload!]): CommentEntity!
  createReply(createReplyInput: CreateReplyDto!, files: [Upload!], parentId: String!): CommentEntity!
  createUser(createUserInput: CreateUserDto!): UserEntity!
  deleteComment(id: String!): CommentEntity!
  removeAvatar(userId: String!): UserEntity!
  removeUser(id: String!): UserEntity!
  updateComment(files: [Upload!], id: String!, updateCommentInput: UpdateCommentDto!): CommentEntity!
  updateUser(id: String!, updateUserInput: UpdateUserDto!): UserEntity!
  uploadAvatar(file: Upload!, userId: String!): UserEntity!
}

type Query {
  comment(id: String!): CommentEntity!
  comments: [CommentEntity!]!
  user(id: String!): UserEntity!
  users: [UserEntity!]!
}

type Subscription {
  avatarUpdated(userId: String!): UserEntity!
  commentAdded: CommentEntity!
  commentDeleted: CommentEntity!
  commentUpdated: CommentEntity!
  userUpdated: UserEntity!
}

input UpdateCommentDto {
  clearAttachments: String
  comment: String
  removeAttachments: [AttachmentToRemove!]
}

input UpdateUserDto {
  avatarUrl: String
  email: String
  name: String
  password: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserEntity {
  avatarUrl: String
  comments: [CommentEntity!]
  email: String!
  id: ID!
  name: String!
}